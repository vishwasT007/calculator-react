{"version":3,"sources":["components/calculator/styled/Container.js","components/calculator/styled/Screen.js","components/calculator/styled/PreviousTextFieldScreen.js","components/calculator/styled/CurrentTextFieldScreen.js","components/calculator/styled/Button.js","components/calculator/Calculator.js","App.js","index.js"],"names":["Container","styled","div","Screen","PreviousTextFieldScreen","CurrentTextFieldScreen","Button","button","gridSpan","operator","handle","equal","point","Calculator","useState","current","setCurrent","previousTextFieldScreen","setPreviousTextFieldScreen","setOperator","appendValue","element","value","target","getAttribute","includes","selectOperator","calculate","output","previousNumber","parseFloat","currentNumber","isNaN","onClick","slice","data","undefined","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aff627af.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  justify-content: center;\n  align-content: center;\n  width: 400px;\n  margin: 40px auto;\n  grid-template-columns: repeat(4, 100px);\n  grid-template-rows: minmax(120px, auto) repeat(5, 100px);\n  box-shadow: 2px 2px 10px white;\n  border-radius: 10px;\n`;\n","import styled from \"styled-components\";\n\nexport const Screen = styled.div`\n  grid-column: 1 / -1;\n  background-color: #155263;\n  display: flex;\n  justify-content: space-around;\n  flex-direction: column;\n  padding: 10px;\n  word-wrap: break-word;\n  word-break: break-all;\n  text-align: right;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n`;\n","import styled from \"styled-components\";\n\nexport const PreviousTextFieldScreen = styled.div`\n  color: white;\n  font-size: 1.5rem;\n`;\n","import styled from \"styled-components\";\n\nexport const CurrentTextFieldScreen = styled.div`\n  color: yellow;\n  font-size: 2.5rem;\n`;\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  cursor: pointer;\n  font-size: 2rem;\n  border: 1px outset white;\n  outline: none;\n  background-color: rgba(255, 255, 255, 0.75);\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n  }\n\n  ${({ gridSpan }) => gridSpan && `grid-column: span ${gridSpan};`}\n\n  ${({ operator }) =>\n    operator &&\n    `background-color: #393e46; color: white; \n    &:hover{background-color: #e7eaf6; color:black;}`}\n\n  ${({ handle }) =>\n    handle &&\n    `   background: #24c6dc; &:hover{background-color: #ff8008; color: white;}`}\n\n\n  ${({ equal }) => equal && `background: #eec0c6;`}\n\n  ${({ point }) =>\n    point &&\n    `background: #3e615b; color: white; &:hover{\n    color: black;\n  }`}\n`;\n","import React, { useState } from \"react\";\nimport { Container } from \"./styled/Container\";\nimport { Screen } from \"./styled/Screen\";\nimport { PreviousTextFieldScreen } from \"./styled/PreviousTextFieldScreen\";\nimport { CurrentTextFieldScreen } from \"./styled/CurrentTextFieldScreen\";\nimport { Button } from \"./styled/Button\";\nconst Calculator = () => {\n  const [current, setCurrent] = useState(\"\");\n  const [previousTextFieldScreen, setPreviousTextFieldScreen] = useState(\"\");\n  const [operator, setOperator] = useState(\"\");\n\n  //Append Value to The Screen\n\n  const appendValue = (element) => {\n    const value = element.target.getAttribute(\"data\");\n    if (value === \".\" && current.includes(\".\")) return;\n    setCurrent(current + value);\n  };\n\n  // Delete Elements from screen\n\n  const handleDelete = () => {\n    setCurrent(current.slice(0, -1));\n  };\n\n  // All clear from screen\n\n  const handleAllClear = () => {\n    setCurrent(\"\");\n    setPreviousTextFieldScreen(\"\");\n    setOperator(\"\");\n  };\n\n  // Lets Select Operator\n\n  const selectOperator = (element) => {\n    if (current === \"\") return;\n    if (previousTextFieldScreen !== \"\") {\n      let value = calculate();\n      setPreviousTextFieldScreen(value);\n    } else {\n      setPreviousTextFieldScreen(current);\n    }\n\n    setCurrent(\"\");\n    setOperator(element.target.getAttribute(\"data\"));\n  };\n\n  //lets Calculate\n\n  const calculate = () => {\n    let output;\n    let previousNumber = parseFloat(previousTextFieldScreen);\n    let currentNumber = parseFloat(current);\n\n    if (isNaN(previousNumber) || isNaN(currentNumber)) return;\n\n    switch (operator) {\n      case \"รท\":\n        output = previousNumber / currentNumber;\n        break;\n      case \"x\":\n        output = previousNumber * currentNumber;\n        break;\n      case \"-\":\n        output = previousNumber - currentNumber;\n        break;\n      case \"+\":\n        output = previousNumber + currentNumber;\n        break;\n      default:\n        return;\n    }\n    return output;\n  };\n\n  // Lets Equal\n\n  const equals = () => {\n    let value = calculate();\n    if (value === undefined || null) return;\n    setCurrent(value);\n    setPreviousTextFieldScreen(\"\");\n    setOperator(\"\");\n  };\n\n  return (\n    <Container>\n      <Screen>\n        <PreviousTextFieldScreen>\n          {previousTextFieldScreen} {operator}\n        </PreviousTextFieldScreen>\n        <CurrentTextFieldScreen>{current}</CurrentTextFieldScreen>\n      </Screen>\n      <Button gridSpan={2} handle onClick={handleAllClear}>\n        AC\n      </Button>\n      <Button handle onClick={handleDelete}>\n        DEL\n      </Button>\n      <Button data={\"รท\"} operator onClick={selectOperator}>\n        รท\n      </Button>\n      <Button data={\"7\"} onClick={appendValue}>\n        7\n      </Button>\n      <Button data={\"8\"} onClick={appendValue}>\n        8\n      </Button>\n      <Button data={\"9\"} onClick={appendValue}>\n        9\n      </Button>\n      <Button data={\"x\"} operator onClick={selectOperator}>\n        x\n      </Button>\n      <Button data={\"4\"} onClick={appendValue}>\n        4\n      </Button>\n      <Button data={\"5\"} onClick={appendValue}>\n        5\n      </Button>\n      <Button data={\"6\"} onClick={appendValue}>\n        6\n      </Button>\n      <Button data={\"-\"} operator onClick={selectOperator}>\n        -\n      </Button>\n      <Button data={\"1\"} onClick={appendValue}>\n        1\n      </Button>\n      <Button data={\"2\"} onClick={appendValue}>\n        2\n      </Button>\n      <Button data={\"3\"} onClick={appendValue}>\n        3\n      </Button>\n      <Button data={\"+\"} operator onClick={selectOperator}>\n        +\n      </Button>\n      <Button data={\".\"} point onClick={appendValue}>\n        .\n      </Button>\n      <Button data={\"0\"} onClick={appendValue}>\n        0\n      </Button>\n      <Button gridSpan={2} equal onClick={equals}>\n        EQUAL\n      </Button>\n    </Container>\n  );\n};\n\nexport default Calculator;\n","import React from \"react\";\nimport Calculator from \"./components/calculator/Calculator\";\n\nfunction App() {\n  return <Calculator />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}